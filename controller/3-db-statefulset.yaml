apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
spec:
  selector:
    matchLabels:
      app: postgres
      tier: database
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        tier: database
        # annotations:
        #   container.apparmor.security.beta.kubernetes.io/postgres: runtime/default
    spec:
      serviceAccountName: postgres-sa
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: topology.kubernetes.io/zone
            labelSelector:
              matchExpressions:
              - key: tier
                operator: In
                values:
                - boundary
      # imagePullSecrets:
      # - name: pull-secret
      containers:
      - name: postgres
        image: postgres:16-alpine3.18
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: boundary
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        volumeMounts:
        - name: postgres-conf
          mountPath: /etc/postgresql
        - name: postgres-data
          mountPath: /var/lib/posgresql/data
        securityContext:
          allowPrivilegeEscalation: false
          # securityContext:
          #   seccompProfile:
          #     type: RuntimeDefault
  volumeClaimTemplates:
  - metadata:
      name: postgres-conf
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "standard"
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: database
spec:
  selector:
    app: postgres
    tier: database
  type: ClusterIP # ClusterIP, NodePort, LoadBalancer, ExternalName
  ports:
  - port: 5432
    targetPort: 5432
